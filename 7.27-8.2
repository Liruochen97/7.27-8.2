##对正负条形图分别着色
library(gcookbook)
library(ggplot2)
cs<-subset(climate,Source=="Berkeley"&Year>=1920)
cs$pos<-cs$Anomaly10y>=0 ##将数据的正负值赋值到pos
ggplot(cs,aes(x=Year,y=Anomaly10y,fill=pos))+geom_bar(stat="identity",position="identity",colour="black",size=0.25)+scale_fill_manual(values=c("#CCEEFF","#FFDDDD"),guide=FALSE) ##去掉默认图例，自定义柱子颜色
##调整条形宽度和条形间距
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+geom_bar(stat="identity",width=0.5,position=position_dodge(0.7)) ##可调节组内条形间距参数position_dodge，大于width即可让组内条形分离，width和position参数默认为0.9
##绘制堆积条形图
library(plyr)
library(RColorBrewer)
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar)))+ ##使用desc函数使柱子顺序按照Cultivar顺序排列
geom_bar(stat="identity",colour="black")+
guides(fill=guide_legend(reverse=TRUE))+ ##图例翻转
scale_fill_brewer(palette="Pastel1") ##调整柱子颜色
##绘制百分比堆积条形图
ce<-ddply(cabbage_exp,"Date",transform,percentw=Weight/sum(Weight)*100) ##增加Weight占每组百分比的数据列
ggplot(ce,aes(x=Date,y=percentw,fill=Cultivar))+geom_bar(stat="identity",colour="black")+guides(fill=guide_legend(reverse=TRUE))+scale_fill_brewer(palette="Pastel1")  ##同上调整条形图参数
##添加数据标签
##为簇状条形图添加数据标签
ggplot(cabbage_exp,aes(x=Date,y=Weight,fill=Cultivar))+
geom_bar(stat="identity",position="dodge")+
geom_text(aes(label=Weight),vjust=1.5,position=position_dodge(.9),size=3) ##使用text函数为图形添加数据标签，需要传参，将其置于柱子内部
##为堆积条形图添加数据标签
ce<-arrange(cabbage_exp,Date,Cultivar) ##对数据进行重排序
ce<-ddply(cabbage_exp,"Date",transform,label_y=cumsum(Weight)) ##按照Date分组计算Weight的累积和，用于绘图时调整数据标签位置
ce$Cultivar<-factor(ce$Cultivar,levels=c("c52","c39")) ##对因子进行重排序，否则标签位置不对
ggplot(ce,aes(x=Date,y=Weight,fill=Cultivar,order=desc(Cultivar)))+
geom_bar(stat="identity",colour="black")+
geom_text(aes(y=label_y,label=Weight),vjust=1.5,colour="white")
library(gcookbook)
library(ggplot2)
library(plyr)
##绘制Cleveland点图 
tophit<-tophitters2001[1:25,] ##取一部分数据
ggplot(tophit,aes(x=avg,y=reorder(name,avg)))+ ##使用reorder函数将name转化为因子型变量并按照avg排序
geom_point(size=3)+
theme_bw()+ ##去掉背景
theme(panel.grid.major.x=element_blank(),
            panel.grid.minor.x=element_blank(),  ##这两句用来去掉垂直网格线          
            panel.grid.major.y=element_line(colour="grey60",linetype="dashed"))
ggplot(tophit,aes(x=reorder(name,avg),y=avg))+ ##互换x,y轴
geom_point(size=3)+
theme_bw()+ ##去掉背景
theme(axis.text.x=element_text(angle=60,hjust=1), ##将数据标签旋转60度，防止遮挡
            panel.grid.major.y=element_blank(),
            panel.grid.minor.y=element_blank(), ##这两句用来去掉水平网格线          
            panel.grid.major.x=element_line(colour="grey60",linetype="dashed"))
##绘制折线图
##绘制简单折线图
ggplot(BOD,aes(x=Time,y=demand))+geom_line()+ylim(0,max(BOD$demand)) ##使用ylim调整y轴范围，注意x是离散型还是连续性变量
##向折线图添加数据标记
ggplot(BOD,aes(x=Time,y=demand))+geom_line()+geom_point() ##添加geom_point()语句
##绘制多重折线图
tg<-ddply(ToothGrowth,c("dose","supp"),summarise,length=mean(len)) ##汇总数据
ggplot(tg,aes(x=dose,y=length,colour=supp))+geom_line() ##将supp映射给线条颜色，注意此时x为连续型变量
ggplot(tg,aes(x=dose,y=length,linetype=supp))+geom_line() ##将supp映射给线型
ggplot(tg,aes(x=dose,y=length,shape=supp))+geom_line()+geom_point(size=4) ##将supp映射给点型（无填充颜色）
ggplot(tg,aes(x=dose,y=length,fill=supp))+geom_line()+geom_point(size=4,shape=21) ##将supp映射给点型（有填充颜色）
ggplot(tg,aes(x=factor(dose),y=length,colour=supp,group=supp))+geom_line() ##此时x为离散型变量，需要指定分组，否则报错
ggplot(tg,aes(x=dose,y=length,shape=supp))+geom_line(position=position_dodge(0.2))+ ##将线错开
geom_point(position=position_dodge(0.2),size=4) ##将点错开
library(ggplot2)
library(plyr)
##修改线条样式
tg<-ddply(ToothGrowth,c("supp","dose"),summarise,length=mean(len))
ggplot(tg,aes(x=dose,y=length,colour=supp))+geom_line(linetype="dashed")+geom_point(shape=22,size=3,fill="white")
##修改数据标记样式
pd<-position_dodge(0.2) ##错位
ggplot(tg,aes(x=dose,y=length,fill=supp))+geom_line(position=pd)+geom_point(shape=21,size=2,position=pd)+scale_fill_manual(values=c("black","white"))
##绘制面积图
year<-as.numeric(time(sunspot.year))
sunspots<-as.numeric(sunspot.year)
sunspotyear<-data.frame(year,sunspots) ##将数据转化为可用格式
ggplot(sunspotyear,aes(x=year,y=sunspots))+geom_area(colour="black",fill="purple",alpha=.2) ##设置线条颜色为黑色，填充颜色为紫色，透明度为80%
ggplot(sunspotyear,aes(x=year,y=sunspots))+geom_area(fill="purple",alpha=.2)+geom_line(colour="black") ##先不设置边框线，然后添加图层，为轨迹线，充当边框线
library(ggplot2)
library(plyr)
library(gcookbook)
##绘制堆积面积图
ggplot(uspopage,aes(x=Year,y=Thousands,fill=AgeGroup))+geom_area()
ggplot(uspopage,aes(x=Year,y=Thousands,fill=AgeGroup))+geom_area(colour="black",size=.2,alpha=.4)+scale_fill_brewer(palette="Blues",breaks=rev(levels(uspopage$AgeGroup))) ##设置不同样式，以agegroup为切分，翻转堆积顺序
##绘制百分比堆积图
nus<-ddply(uspopage,"Year",transform,per=Thousands/sum(Thousands)*100) ##计算出百分比
ggplot(nus,aes(x=Year,y=per,fill=AgeGroup))+geom_area(colour="black",size=.2,alpha=.4)+scale_fill_brewer(palette="Blues",breaks=rev(levels(uspopage$AgeGroup))) ##与绘制堆积图一样的步骤
##添加置信域
clim<-subset(climate,Source=="Berkeley",select=c("Year","Anomaly10y","Unc10y")) ##选取数据集
ggplot(clim,aes(x=Year,y=Anomaly10y))+
geom_ribbon(aes(ymin=Anomaly10y-Unc10y,ymax=Anomaly10y+Unc10y),alpha=0.2)+ ##使用geom_ribbon添加置信域，传y的最大最小值为参数,设置透明度为80%
geom_line() ##先添加置信域，后画线，避免遮挡，或
ggplot(clim,aes(x=Year,y=Anomaly10y))+
geom_line(aes(y=Anomaly10y-Unc10y),colour="grey50",linetype="dotted")+
geom_line(aes(y=Anomaly10y+Unc10y),colour="grey50",linetype="dotted")+ ##以虚线表示置信域
geom_line()
##绘制基本散点图
ggplot(heightweight,aes(x=ageYear,y=heightIn))+geom_point(shape=21) ##设置点型为空心
##使用点型和颜色基于某变量对数据进行分组
ggplot(heightweight,aes(x=ageYear,y=heightIn,colour=sex))+geom_point(shape=21) ##将sex作为分组变量映射给colour 
ggplot(heightweight,aes(x=ageYear,y=heightIn,shape=sex,colour=sex))+geom_point() ##将sex作为分组变量映射给colour和shape
ggplot(heightweight,aes(x=ageYear,y=heightIn,shape=sex,colour=sex))+geom_point()+scale_shape_manual(values=c(1,2))+scale_colour_brewer(palette="Set1") ##自定义点型及颜色
##使用不同于默认设置的点型
ggplot(heightweight,aes(ageYear,heightIn))+geom_point(shape=19)
ggplot(heightweight,aes(ageYear,heightIn,shape=sex))+geom_point(size=3,colour="pink")+scale_shape_manual(values=c(19,20))
hw<-heightweight
hw$wgroup<-cut(hw$weightLb,breaks=c(-Inf,100,Inf),labels=c("<100",">=100")) ##使用cut函数将数据分为大于100和小于100的两组
ggplot(hw,aes(x=ageYear,y=heightIn,shape=sex,fill=wgroup))+ ##将heightIn和wgroup分别映射给形状和填充颜色
geom_point(size=2.5)+
scale_shape_manual(values=c(21,24))+scale_fill_manual(values=c(NA,"black"),guide=guide_legend(override.aes=list(shape=21))) ##自定义颜色，点型
##将连续型变量映射到点的颜色或大小属性上
ggplot(heightweight,aes(x=ageYear,y=heightIn,fill=weightLb))+ ##将weightLb这个连续型变量映射给填充颜色
geom_point(shape=21,size=2.5)+scale_fill_gradient(low="black",high="white") ##以连续的色阶为图例
ggplot(heightweight,aes(x=ageYear,y=heightIn,fill=weightLb))+ ##将weightLb这个连续型变量映射给填充颜色
geom_point(shape=21,size=2.5)+scale_fill_gradient(low="black",high="white",breaks=seq(70,170,by=20),guide=guide_legend()) ##以离散的图例代替色阶
ggplot(heightweight,aes(x=ageYear,y=heightIn,size=weightLb,colour=sex))+ ##将weightLb这个连续型变量映射给点的大小，sex映射给颜色
geom_point(alpha=.5)+scale_size_area()+ ##使点的大小正比于weightLb值
scale_colour_brewer(palette="Set1")
##处理图形重叠
sp<-ggplot(diamonds,aes(x=carat,y=price)) ##便于后续使用
library(hexbin)
sp+stat_bin2d() ##默认分箱为30×30
sp+stat_bin2d(bins=50)+ ##手动设置分箱数为50×50
scale_fill_gradient(low="lightblue",high="red",limits=c(0,6000)) ##设置图例颜色及取值范围
sp+stat_binhex()+  ##使用六边形代替矩形分箱
scale_fill_gradient(low="lightblue",high="red",breaks=c(0,250,500,1000,2000,4000,6000),limits=c(0,6000)) ##将图例设置为离散型
##分组绘制箱线图
ggplot(ChickWeight,aes(x=Time,y=weight))+geom_boxplot(aes(group=Time)) ##以Time为分组绘制箱线图
##添加回归模型拟合线
ggplot(heightweight,aes(x=ageYear,y=heightIn))+geom_point()+stat_smooth(method=lm,level=0.99) ##为散点图拟合线性模型，添加99%的置信域，或用se=FALSE命令不绘制置信域，默认95%
ggplot(heightweight,aes(x=ageYear,y=heightIn))+geom_point(colour="grey60")+stat_smooth(method=lm,level=0.99,colour="black") ##修改点和线的默认颜色为灰色和黑色
##根据已有模型向散点图添加拟合线
model<-lm(heightIn~ageYear+I(ageYear^2),heightweight) ##自己拟合一个模型
xmin<-min(heightweight$ageYear)
xmax<-max(heightweight$ageYear)
predicted<-data.frame(ageYear=seq(xmin,xmax,length.out=100)) ##创建一个包含从ageYear最小值到最大值的100项等差数列用于预测
predicted$heightIn<-predict(model,predicted)
ggplot(heightweight,aes(x=ageYear,y=heightIn))+geom_point(colour="grey50")+
geom_line(data=predicted,size=1)
##添加来自多个模型的拟合线
##首先编写根据模型预测变量的函数，向该函数传递一个模型，x和y作为参数，可以返回一个包含预测变量和模型预测值的数据框
predictvals<-function(model,xvar,yvar,xrange=NULL,samples=100,...){
if(is.null(xrange)){
  if(any(class(model)%in%c("lm","glm")))
    xrange<-range(model$model[[xvar]])
  else if (any(class(model)%in%"loess"))
    xrange<-range(model$x)
}
newdata<-data.frame(x=seq(xrange[1],xrange[2],length.out=samples))
names(newdata)<-xvar
newdata[[yvar]]<-predict(model,newdata=newdata,...)
newdata
}
##编写建立模型的函数以供调用
make_model<-function(data) {
lm(heightIn~ageYear,data)
}
models<-dlply(heightweight,"sex",.fun=make_model) ##将heightweight数据框按照sex切分，每个部分执行make_model函数
predvals<-ldply(models,.fun=predictvals,xvar="ageYear",yvar="heightIn") ##获取两个模型对应的预测值，变量名称需与原数据集中用来画图的变量名称一致
ggplot(heightweight,aes(x=ageYear,y=heightIn,colour=sex))+geom_point()+geom_line(data=predvals)
##向散点图添加模型系数
model<-lm(heightIn~ageYear,heightweight) ##建用于绘图的模型
summary(model) ##得知r平方值为0.4249
pred<-predictvals(model,"ageYear","heightIn")
ggplot(heightweight,aes(x=ageYear,y=heightIn))+geom_point()+geom_line(data=pred)+
annotate("text",label="r^2==0.42",x=16.5,y=52,parse=TRUE) ##添加数据标签，使用R的数学表达式语法输入公式，当x和y设置成Inf和-Inf时表达式置于图形右下角，再利用hjust和vjust函数调整使其位于绘图区域内
##向散点图添加边际地毯
ggplot(faithful,aes(x=eruptions,y=waiting))+geom_point()+
geom_rug(position="jitter",size=.2) ##通过添加扰动，使线型更细来帮助看清数据分布状况
